                                              /** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro BALANCE_OF() = takes (0) returns (0) {
    0x04 calldataload                                       // [addr]
    sload                                                   // [addr_balance]

    0x00 mstore                                             // []
    0x20 0x00 return                                        // []
}

#define macro WITHDRAW() = takes (0) returns (1) {
    caller                                                  // [addr]
    sload                                                   // [addr_balance]
    dup1                                                    // [addr_balance, addr_balance]
    0x04 calldataload                                       // [amount, addr_balance, addr_balance]
    gt iszero                                               // [can_withdraw, addr_balance]
    give                                                    // [give_pc, can_withdraw, addr_balance]
    jumpi                                                   // [addr_balance]

    0x00 0x00 revert

    give:
        // update the storage
        0x00                                                // [0, addr_balance]
        caller                                              // [caller, 0, addr_balance]
        sstore                                              // [addr_balance]
        
        0x00 0x00 0x00 0x00                                 // [0, 0, 0, 0, addr_balance]
        swap4                                               // [addr_balance, 0, 0, 0, 0]
        caller                                              // [caller, addr_balance, 0, 0, 0, 0]
        gas                                                 // [gas, caller, addr_balance, 0, 0, 0, 0]
        call                                                // [call_success]
}

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr                              // [calldata_func_sig]
    dup1 __FUNC_SIG(balanceOf) eq balance_of jumpi          // [calldata_func_sig]

    __FUNC_SIG(withdraw) eq withdraw_pc jumpi               // []

    callvalue                                               // [callvalue]
    caller                                                  // [caller (will be used as storage slot), callvalue]
    sstore                                                  // []
    0x00 0x00 return                                        // []

    balance_of:
        BALANCE_OF()
    withdraw_pc:
        WITHDRAW()                                          // [call_success]
}
